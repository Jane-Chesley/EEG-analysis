# clean environment
rm(list = ls())
# required packages
library(readxl)
library(tidyverse)
library(car)
library(broom)
library(knitr)
library(rstatix)
library(dplyr)
library(ggpubr)
library(xlsx)
library(ggplot2)
file_name = ("/Users/jane_chesley/Desktop/sim_stats2.xlsx")
current_file = file_name
# Get input data in long format
long_data <- read_excel(current_file)
# Convert numerical to character labels
# Variable 1
species_labels <- c("human", "monkey")
# Replace numerical values with character labels
long_data$Species <- species_labels[long_data$Species]
# Variable 2
category_labels <- c("body", "face", "object")
# Replace numerical values with character labels
long_data$Category <- category_labels[long_data$Category]
# Convert input data from long format to wide format
wide_data <- pivot_wider(long_data, names_from = c(Species, Category), values_from = Measurement)
write.xlsx(wide_data, "output.xlsx", sheetName = "Input_data")
getwd()
# Summary statistics
summary_stats <- long_data %>%
group_by(Species, Category) %>%
get_summary_stats(Measurement, type = "mean_sd")
write.xlsx(summary_stats, "output.xlsx", sheetName = "Summary_Stats", append = TRUE)
# Visualize box plots
bxp <- ggboxplot(
long_data, x = "Category", y = "Measurement",
color = "Species", palette = "jco"
)
bxp
# Check assumption #1: no outliers
# 'identify_outliers' function calculates Z-scores (# of SDs from the mean) for each data point,
# and data points > 3 SDs (or < -3 SDs) from the mean are considered as outliers
outliers <- long_data %>%
group_by(Species, Category) %>%
identify_outliers(Measurement)
write.xlsx(outliers, "output.xlsx", sheetName = "Outliers", append = TRUE)
# Check assumption #2: normality
# Shapiro wilk test: normal = p > 0.05
normality <- long_data %>%
group_by(Species, Category) %>%
shapiro_test(Measurement)
ggsave("boxplots.png", plot = bxp, dpi = 300)
# Show results
rmANOVA_results <- get_anova_table(results)
# Perform rANOVA
results <- anova_test(
data = long_data, dv = Measurement, wid = Subject,
within = c(Species, Category)
)
# Show results
rmANOVA_results <- get_anova_table(results)
write.xlsx(rmANOVA_results, "output.xlsx", sheetName = "rmANOVA_results", append = TRUE)
View(results)
View(rmANOVA_results)
View(rmANOVA_results)
# Show results
rmANOVA_results <- get_anova_table(results)
write.xlsx(rmANOVA_results, "output.xlsx", sheetName = "rmANOVA_results", append = TRUE)
